apiVersion: v1
kind: ConfigMap
metadata:
  name: backend
  namespace: expense
data:
  DB_HOST: mysql

---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: backend
  namespace: expense
  labels:
    tier: backend
    project: expense
spec:
  replicas: 2
  selector:
    matchLabels:
      tier: backend
      project: expense
  template:
    metadata:
      name: backend
      labels:
        tier: backend
        project: expense
    spec:
      containers:
        - name: backend
          image: yashdwar/backend:{{ .Values.deployment.imageVersion}}
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 100m
              memory: 128Mi
# ---
# kind: Service
# apiVersion: v1
# metadata:
#   name: backend
#   namespace: expense
# spec:
#   selector:
#     tier: backend
#     project: expense
#   ports:
#   - name: backend
#     protocol: TCP
#     port: 8080 # service port
#     targetPort: 8080 # container port
# ---
# apiVersion: autoscaling/v1
# kind: HorizontalPodAutoscaler
# metadata:
#   name: backend
#   namespace: expense
# spec:
#   scaleTargetRef:
#     apiVersion: apps/v1
#     kind: Deployment   #this targets only deployment not pod, since only there scalability is leveraged with no.of pods
#     name: backend
#   minReplicas: 1
#   maxReplicas: 10
#   targetCPUUtilizationPercentage: 15 #usally 75 in realtime